@page "/teachers/create"
@using Microsoft.EntityFrameworkCore
@using BlazorAcademy.Models
@inject IDbContextFactory<BlazorAcademy.Data.BlazorAcademyContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Teachers</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Teachers" OnValidSubmit="AddTeachers" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="last_name" class="form-label">last_name:</label> 
                <InputText id="last_name" @bind-Value="Teachers.last_name" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.last_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="first_name" class="form-label">first_name:</label> 
                <InputText id="first_name" @bind-Value="Teachers.first_name" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.first_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="middle_name" class="form-label">middle_name:</label> 
                <InputText id="middle_name" @bind-Value="Teachers.middle_name" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.middle_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="bith_date" class="form-label">bith_date:</label> 
                <InputDate id="bith_date" @bind-Value="Teachers.birth_date" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.birth_date" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="work_since" class="form-label">work_since:</label> 
                <InputDate id="work_since" @bind-Value="Teachers.work_since" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.work_since" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="rate" class="form-label">rate:</label> 
                <InputNumber id="rate" @bind-Value="Teachers.rate" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Teachers.rate" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/teachers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Teachers Teachers { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddTeachers()
    {
        using var context = DbFactory.CreateDbContext();
        context.Teachers.Add(Teachers);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/teachers");
    }
}
